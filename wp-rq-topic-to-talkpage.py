# -*- coding: utf-8 -*-
import pywikibot
import re
import mwparserfromhell
import json
import time
from typing import Dict, List, Set, Tuple, Optional
from pywikibot import exceptions as pwb_exceptions # –î–æ–±–∞–≤–ª–µ–Ω–æ –¥–ª—è QuitKeyboardInterrupt

# --- CONFIGURATION ---
TARGET_CATEGORY = "–ö–∞—Ç–µ–≥–æ—Ä–∏—è:–í–∏–∫–∏–ø–µ–¥–∏—è:–°—Ç–∞—Ç—å–∏ —Å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —à–∞–±–ª–æ–Ω–∞ rq"
PROJECT_TEMPLATE_REDIRECT_CACHE_FILE = "project_template_redirects_cache.json"
DEBUG_ARTICLE = ""  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π —Å—Ç–∞—Ç—å–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä "–ù–∞–∑–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏"
AUTOSAVE = False # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ

# –ö–æ–º–ø–∞–∫—Ç–Ω–∞—è –∫–∞—Ä—Ç–∞ —Ç–µ–º –∏ –∏—Ö –∞–ª–∏–∞—Å–æ–≤ –∫ —à–∞–±–ª–æ–Ω–∞–º –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–ª–∏ 'skip'
# –ö–ª—é—á–∏ - –∫–æ—Ä—Ç–µ–∂–∏ –∞–ª–∏–∞—Å–æ–≤ —Ç–µ–º—ã (–≤—Å–µ –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ)
COMPACT_TOPIC_TO_PROJECT_TEMPLATE_MAP = {
    ('architecture', '–∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞',
    ('art', '–∏—Å–∫—É—Å—Å—Ç–≤–æ'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ò—Å–∫—É—Å—Å—Ç–≤–æ',
    ('astronomy', '–∞—Å—Ç—Ä–æ–Ω–æ–º–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ê—Å—Ç—Ä–æ–Ω–æ–º–∏—è',
    ('automanufacturer', '–∞–≤—Ç–æ–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å', 'autotech', '–∞–≤—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞', 'auto', '–∞–≤—Ç–æ', '–∞–≤—Ç–æ–º–æ–±–∏–ª—å'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ê–≤—Ç–æ–º–æ–±–∏–ª—å',
    ('biology', '–±–∏–æ–ª–æ–≥–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ë–∏–æ–ª–æ–≥–∏—è',
    ('chemistry', '—Ö–∏–º–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –•–∏–º–∏—è',
    ('cinema', '–∫–∏–Ω–æ'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ö–∏–Ω–æ',
    ('comics', '–∫–æ–º–∏–∫—Å—ã'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ö–æ–º–∏–∫—Å—ã',
    ('pharmacology', 'drug', '—Ñ–∞—Ä–º–∞–∫–æ–ª–æ–≥–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –§–∞—Ä–º–∞—Ü–∏—è',
    ('economics', '—ç–∫–æ–Ω–æ–º–∏–∫–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –≠–∫–æ–Ω–æ–º–∏–∫–∞',
    ('education', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ',
    ('entertainment', '—Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è'): 'skip',
    ('games', '–∏–≥—Ä—ã', 'videogames', '–∫–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ö–æ–º–ø—å—é—Ç–µ—Ä–Ω—ã–µ –∏–≥—Ä—ã',
    ('geography', '–≥–µ–æ–≥—Ä–∞—Ñ–∏—è'): 'skip',
    ('geology', '–≥–µ–æ–ª–æ–≥–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ì–µ–æ–ª–æ–≥–∏—è',
    ('history', '–∏—Å—Ç–æ—Ä–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ò—Å—Ç–æ—Ä–∏—è',
    ('it', 'comp', 'computers', '–∏—Ç'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
    ('law', 'legal', '–ø—Ä–∞–≤–æ'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ü—Ä–∞–≤–æ',
    ('linguistics', '–ª–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –õ–∏–Ω–≥–≤–∏—Å—Ç–∏–∫–∞',
    ('literature', '–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞',
    ('logic', '–ª–æ–≥–∏–∫–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –õ–æ–≥–∏–∫–∞',
    ('math', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
    ('medicine', '–º–µ–¥–∏—Ü–∏–Ω–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ú–µ–¥–∏—Ü–∏–Ω–∞',
    ('music', '–º—É–∑—ã–∫–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ú—É–∑—ã–∫–∞',
    ('navy', '—Ñ–ª–æ—Ç'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å—Ç–≤–æ',
    ('philosophy', '—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –§–∏–ª–æ—Å–æ—Ñ–∏—è',
    ('physics', '—Ñ–∏–∑–∏–∫–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –§–∏–∑–∏–∫–∞',
    ('politics', '–ø–æ–ª–∏—Ç–∏–∫–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ü–æ–ª–∏—Ç–∏–∫–∞',
    ('psychiatry', '–ø—Å–∏—Ö–∏–∞—Ç—Ä–∏—è', 'psychology', '–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –∏ –ø—Å–∏—Ö–∏–∞—Ç—Ä–∏—è',
    ('religion', '—Ä–µ–ª–∏–≥–∏—è'): 'skip',
    ('sociology', '—Å–æ—Ü–∏–æ–ª–æ–≥–∏—è'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –°–æ—Ü–∏–æ–ª–æ–≥–∏—è',
    ('sport', '—Å–ø–æ—Ä—Ç'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –°–ø–æ—Ä—Ç',
    ('statistics', '—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞',
    ('technology', '—Ç–µ—Ö–Ω–∏–∫–∞'): 'skip',
    ('telecommunication', '—Ç–µ–ª–µ–∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏'): 'skip',
    ('theatre', 'theater', '—Ç–µ–∞—Ç—Ä'): '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –¢–µ–∞—Ç—Ä',
    ('transport', '—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç'): 'skip',
}

# –°–ª–æ–≤–∞—Ä—å —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–æ–≤: –µ—Å–ª–∏ –Ω–∞ –°–û –µ—Å—Ç—å –ö–õ–Æ–ß, —ç—Ç–æ —Ä–∞–≤–Ω–æ—Å–∏–ª—å–Ω–æ –Ω–∞–ª–∏—á–∏—é –ó–ù–ê–ß–ï–ù–ò–Ø (–∫–æ—Ç–æ—Ä–æ–µ –º—ã –±—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏)
PROJECT_EQUIVALENTS_ON_TALK_PAGE = {
    '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º—É–∑—ã–∫–∞': '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ú—É–∑—ã–∫–∞',
    '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –≠–Ω—Ç–æ–º–æ–ª–æ–≥–∏—è': '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ë–∏–æ–ª–æ–≥–∏—è',
    '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ë–æ—Ç–∞–Ω–∏–∫–∞': '–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ë–∏–æ–ª–æ–≥–∏—è',
}

# –®–∞–±–ª–æ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –∏—â–µ–º –∫–∞–∫ "–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞" –Ω–∞ –°–û
PROJECT_TEMPLATE_PREFIX = "–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞"
# --- END CONFIGURATION ---

# --- UTILITY FUNCTIONS ---
def print_debug(message: str) -> None:
    print(message) # –î–ª—è —ç—Ç–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞ –æ—Ç–ª–∞–¥–∫–∞ –≤—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω–∞

def get_site() -> pywikibot.Site:
    site = pywikibot.Site('ru', 'wikipedia')
    site.login()
    return site

def compare_template_names(name1: str, name2: str) -> bool:
    """
    Compares template names similar to MediaWiki link rules:
    - First letter is case-insensitive.
    - The rest of the name is case-sensitive.
    - Spaces and underscores are treated as equivalent and normalized to a single space.
    """
    n1 = ' '.join(name1.replace('_', ' ').split())
    n2 = ' '.join(name2.replace('_', ' ').split())

    if not n1 or not n2:
        return n1 == n2

    if n1[0].lower() != n2[0].lower():
        return False

    if len(n1) > 1 and len(n2) > 1: # Only compare suffixes if both names have them
        if n1[1:] != n2[1:]:
            return False
    elif len(n1) != len(n2): # If one has a suffix and the other doesn't
        return False
        
    return True

def load_json_cache(filename: str) -> Dict:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∫—ç—à –∏–∑ JSON-—Ñ–∞–π–ª–∞."""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            cache = json.load(f)
            print_debug(f"    üíæ –ö—ç—à —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ {filename}.")
            return cache
    except FileNotFoundError:
        print_debug(f"    ‚ÑπÔ∏è –§–∞–π–ª –∫—ç—à–∞ {filename} –Ω–µ –Ω–∞–π–¥–µ–Ω. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π.")
        return {}
    except json.JSONDecodeError:
        print_debug(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –∏–∑ —Ñ–∞–π–ª–∞ {filename}. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫—ç—à.")
        return {}

def save_json_cache(filename: str, cache_data: Dict) -> None:
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫—ç—à –≤ JSON-—Ñ–∞–π–ª."""
    try:
        with open(filename, 'w', encoding='utf-8') as f:
            json.dump(cache_data, f, ensure_ascii=False, indent=4)
            print_debug(f"    üíæ –ö—ç—à —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {filename}.")
    except IOError:
        print_debug(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∫—ç—à–∞ –≤ —Ñ–∞–π–ª {filename}.")

def get_template_redirects(site: pywikibot.Site, template_name: str) -> Dict[str, str]:
    """
    –ü–æ–ª—É—á–∞–µ—Ç –≤—Å–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å {–Ω–∞–∑–≤–∞–Ω–∏–µ_—Ä–µ–¥–∏—Ä–µ–∫—Ç–∞_–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ: –æ—Å–Ω–æ–≤–Ω–æ–µ_–Ω–∞–∑–≤–∞–Ω–∏–µ_–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ}.
    """
    redirects: Dict[str, str] = {}
    # –£–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å "–®–∞–±–ª–æ–Ω:", –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    if template_name.lower().startswith("—à–∞–±–ª–æ–Ω:"):
        template_name_core = template_name[len("—à–∞–±–ª–æ–Ω:"):]
    else:
        template_name_core = template_name
        
    template_page = pywikibot.Page(site, f"–®–∞–±–ª–æ–Ω:{template_name_core}")
    main_name_original_case = template_name_core # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç

    try:
        if template_page.isRedirectPage():
            target = template_page.getRedirectTarget()
            main_name_original_case = target.title(with_ns=False)
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–º —Ä–µ–¥–∏—Ä–µ–∫—Ç (–∏—Å—Ö–æ–¥–Ω–æ–µ –∏–º—è) –≤ —Å–ª–æ–≤–∞—Ä—å
            redirects[normalize_template_name_for_comparison(template_name_core)] = main_name_original_case
            template_page = target # –¢–µ–ø–µ—Ä—å —Ä–∞–±–æ—Ç–∞–µ–º —Å —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π
        else:
            # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç, —Ç–æ —ç—Ç–æ –æ—Å–Ω–æ–≤–Ω–æ–π —à–∞–±–ª–æ–Ω. main_name_original_case —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.
            pass # main_name_original_case —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ

        # –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–º –æ—Å–Ω–æ–≤–Ω–æ–π —à–∞–±–ª–æ–Ω (–∏–ª–∏ —Ü–µ–ª—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞) –≤ —Å–ª–æ–≤–∞—Ä—å
        redirects[normalize_template_name_for_comparison(main_name_original_case)] = main_name_original_case
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –Ω–∞ —ç—Ç–æ—Ç —à–∞–±–ª–æ–Ω (–∏–ª–∏ –Ω–∞ —Ü–µ–ª—å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞)
        for redirect in template_page.redirects(namespaces=site.namespaces.TEMPLATE):
            redirect_title_no_ns = redirect.title(with_ns=False)
            redirects[normalize_template_name_for_comparison(redirect_title_no_ns)] = main_name_original_case
            
    except pywikibot.exceptions.Error as e:
        print_debug(f"    ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è —à–∞–±–ª–æ–Ω–∞ {template_name_core}: {e}")
    
    return redirects

def normalize_template_name_for_comparison(name: str) -> str:
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –∏–º—è —à–∞–±–ª–æ–Ω–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä, –ø—Ä–æ–±–µ–ª—ã –≤–º–µ—Å—Ç–æ –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏–π."""
    return ' '.join(name.lower().replace('_', ' ').split())

def get_all_project_template_redirects(site: pywikibot.Site) -> Dict[str, Dict[str, str]]:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –¥–ª—è –≤—Å–µ—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∏–∑ COMPACT_TOPIC_TO_PROJECT_TEMPLATE_MAP 
    –∏ –¥–ª—è –∫–ª—é—á–µ–π –∏ –∑–Ω–∞—á–µ–Ω–∏–π –∏–∑ PROJECT_EQUIVALENTS_ON_TALK_PAGE.
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∫—ç—à, –µ—Å–ª–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø–æ—è–≤–∏–ª–∏—Å—å –Ω–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å: { '–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ_–∏–º—è_—à–∞–±–ª–æ–Ω–∞_–ø—Ä–æ–µ–∫—Ç–∞_–∏–ª–∏_—ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–∞': { '–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π_—Ä–µ–¥–∏—Ä–µ–∫—Ç': '–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ_–∏–º—è_—ç—Ç–æ–≥–æ_—à–∞–±–ª–æ–Ω–∞' } }
    """
    global PROJECT_TEMPLATE_REDIRECT_CACHE_FILE
    
    cached_redirects = load_json_cache(PROJECT_TEMPLATE_REDIRECT_CACHE_FILE)
    
    unique_templates_to_ensure_in_cache: Set[str] = set()
    # –î–æ–±–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –º—ã –º–æ–∂–µ–º –∑–∞—Ö–æ—Ç–µ—Ç—å –ø–æ—Å—Ç–∞–≤–∏—Ç—å (–∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ COMPACT_TOPIC_TO_PROJECT_TEMPLATE_MAP)
    for template_name in COMPACT_TOPIC_TO_PROJECT_TEMPLATE_MAP.values():
        if template_name != 'skip':
            unique_templates_to_ensure_in_cache.add(template_name)
    # –î–æ–±–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–∞–º–∏ –Ω–∞ –°–û (–∫–ª—é—á–∏ –∏–∑ PROJECT_EQUIVALENTS_ON_TALK_PAGE)
    for template_name in PROJECT_EQUIVALENTS_ON_TALK_PAGE.keys():
        unique_templates_to_ensure_in_cache.add(template_name)
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–∞–∫–∂–µ –∏ –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ PROJECT_EQUIVALENTS_ON_TALK_PAGE, —Ç–∞–∫ –∫–∞–∫ –¥–ª—è –Ω–∏—Ö —Ç–æ–∂–µ –º–æ–≥—É—Ç –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã,
    # –µ—Å–ª–∏ –æ–Ω–∏ —Å–∞–º–∏ –ø–æ —Å–µ–±–µ —è–≤–ª—è—é—Ç—Å—è —Ü–µ–ª—å—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞ –ú—É–∑—ã–∫–∞" –≤ –≤–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ)
    for template_name in PROJECT_EQUIVALENTS_ON_TALK_PAGE.values():
        unique_templates_to_ensure_in_cache.add(template_name)

    templates_to_fetch_now: Set[str] = set()
    if not cached_redirects:
        print_debug("    üîé –ö—ç—à —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –ø—É—Å—Ç. –ë—É–¥–µ—Ç –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω –ø–æ–ª–Ω—ã–π —Å–±–æ—Ä —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤.")
        templates_to_fetch_now = unique_templates_to_ensure_in_cache.copy()
    else:
        print_debug("    ‚ôªÔ∏è  –†–µ–¥–∏—Ä–µ–∫—Ç—ã —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ –∫—ç—à–∞. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–ª–Ω–æ—Ç—É...")
        for template_name_original in unique_templates_to_ensure_in_cache:
            if template_name_original not in cached_redirects:
                templates_to_fetch_now.add(template_name_original)
        
        if templates_to_fetch_now:
            print_debug(f"    ‚ÑπÔ∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–æ–≤—ã–µ/–æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ —à–∞–±–ª–æ–Ω—ã –≤ –∫—ç—à–µ –¥–ª—è: {len(templates_to_fetch_now)} —ç–ª–µ–º–µ–Ω—Ç(–æ–≤) ({ ', '.join(list(templates_to_fetch_now)[:3]) }{ ' –∏ –¥—Ä.' if len(templates_to_fetch_now) > 3 else '' }). –ë—É–¥—É—Ç –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏—Ö —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã.")
        else:
            print_debug("    ‚úÖ –ö—ç—à –ø–æ–ª–Ω—ã–π. –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫—ç—à.")
            return cached_redirects # –ö—ç—à —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –ø–æ–ª–æ–Ω

    # –ï—Å–ª–∏ –º—ã –∑–¥–µ—Å—å, —Ç–æ –ª–∏–±–æ –∫—ç—à –±—ã–ª –ø—É—Å—Ç, –ª–∏–±–æ –æ–Ω –±—ã–ª –Ω–µ–ø–æ–ª–Ω—ã–º.
    # `templates_to_fetch_now` —Å–æ–¥–µ—Ä–∂–∏—Ç —à–∞–±–ª–æ–Ω—ã, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã.
    # `final_redirects` –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
    final_redirects: Dict[str, Dict[str, str]] = cached_redirects.copy() if cached_redirects else {}
    cache_was_updated = False

    if not templates_to_fetch_now and not final_redirects: # –ï—Å–ª–∏ –∫—ç—à –±—ã–ª –ø—É—Å—Ç –∏ –Ω–µ—á–µ–≥–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å (–º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–æ)
        print_debug("    ‚ö†Ô∏è –ù–µ—Ç —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤.")
        return {}

    if templates_to_fetch_now:
        print_debug(f"    üîé –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è {len(templates_to_fetch_now)} —à–∞–±–ª–æ–Ω(–∞/–æ–≤)...")
        for i, template_name_original in enumerate(list(templates_to_fetch_now)):
            print_debug(f"        ({i+1}/{len(templates_to_fetch_now)}) –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤ –¥–ª—è: –®–∞–±–ª–æ–Ω:{template_name_original}")
            redirects_for_one = get_template_redirects(site, template_name_original) 
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ final_redirects
            if template_name_original not in final_redirects:
                final_redirects[template_name_original] = {}

            newly_added_redirects_for_this_template = False
            for norm_redirect, main_original_name_from_func in redirects_for_one.items():
                # main_original_name_from_func –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–≤–µ–Ω template_name_original, –µ—Å–ª–∏ get_template_redirects —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç—Å—è
                # –¥–ª—è –Ω–∞—à–∏—Ö —Ü–µ–ª–µ–π, –º—ã —Ö–æ—Ç–∏–º, —á—Ç–æ–±—ã –∑–Ω–∞—á–µ–Ω–∏–µ –±—ã–ª–æ –∏–º–µ–Ω–Ω–æ template_name_original (–¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –∏—Å–∫–∞–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã)
                if norm_redirect not in final_redirects[template_name_original] or \
                   final_redirects[template_name_original][norm_redirect] != template_name_original:
                    final_redirects[template_name_original][norm_redirect] = template_name_original 
                    newly_added_redirects_for_this_template = True
                if norm_redirect != normalize_template_name_for_comparison(template_name_original) and newly_added_redirects_for_this_template:
                    print_debug(f"            ‚Ü™Ô∏è –ù–∞–π–¥–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω —Ä–µ–¥–∏—Ä–µ–∫—Ç: '{norm_redirect}' -> '{template_name_original}'")
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Å–∞–º –≥–ª–∞–≤–Ω—ã–π —à–∞–±–ª–æ–Ω (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π) –≤ –µ–≥–æ –∂–µ —Å–ø–∏—Å–æ–∫ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–≤, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
            normalized_main_name = normalize_template_name_for_comparison(template_name_original)
            if normalized_main_name not in final_redirects[template_name_original] or \
               final_redirects[template_name_original][normalized_main_name] != template_name_original:
                final_redirects[template_name_original][normalized_main_name] = template_name_original
                newly_added_redirects_for_this_template = True
            
            if newly_added_redirects_for_this_template:
                cache_was_updated = True
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—ç—à —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω (–∏–ª–∏ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ –±—ã–ª–æ –∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏)
    if cache_was_updated or not cached_redirects: # –ï—Å–ª–∏ –∫—ç—à–∞ –Ω–µ –±—ã–ª–æ, templates_to_fetch_now –Ω–µ –±—É–¥–µ—Ç –ø—É—Å—Ç—ã–º (–µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥)
        save_json_cache(PROJECT_TEMPLATE_REDIRECT_CACHE_FILE, final_redirects)
    
    return final_redirects

# --- MAIN PROCESSING LOGIC ---

def check_rq_conditions(template: mwparserfromhell.nodes.Template) -> Optional[Tuple[str, str]]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —à–∞–±–ª–æ–Ω Rq –∑–∞–¥–∞–Ω–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ (–∑–Ω–∞—á–µ–Ω–∏–µ_–ø–∞—Ä–∞–º–µ—Ç—Ä–∞_topic, —Å—Ç—Ä–æ–∫–∞_—à–∞–±–ª–æ–Ω–∞_–Ω–µ—Ç_–∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏_—Å_–ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏),
    –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, –∏–Ω–∞—á–µ None.
    –£—Å–ª–æ–≤–∏—è:
    1. –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä 'topic'.
    2. –¢–æ–ª—å–∫–æ –æ–¥–∏–Ω –Ω–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä.
    3. –ù–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä (–ø–æ—Å–ª–µ strip) —è–≤–ª—è–µ—Ç—Å—è –≤ —Ç–æ—á–Ω–æ—Å—Ç–∏ —à–∞–±–ª–æ–Ω–æ–º {{–Ω–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏}} (–∏–ª–∏ –µ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º),
       –≤–æ–∑–º–æ–∂–Ω–æ —Å –µ–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.
    """
    named_params_map: Dict[str, mwparserfromhell.wikicode.Wikicode] = {} # name_str -> value_wikicode
    unnamed_param_values: List[mwparserfromhell.wikicode.Wikicode] = []

    for param in template.params:
        if param.showkey: # –ò–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
            named_params_map[str(param.name).strip().lower()] = param.value
        else: # –ù–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
            unnamed_param_values.append(param.value)

    if not (len(named_params_map) == 1 and 'topic' in named_params_map and len(unnamed_param_values) == 1):
        return None # –ù–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ª–æ–≤–∏—è –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É/–∏–º–µ–Ω–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤

    topic_value_str = str(named_params_map['topic']).strip() # topic –≤—Å–µ–≥–¥–∞ –æ–¥–∏–Ω, –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ
    wikicode_of_unnamed_param = unnamed_param_values[0]
    
    try:
        inner_templates = wikicode_of_unnamed_param.filter_templates()

        if len(inner_templates) == 1:
            inner_template_node = inner_templates[0] # mwparserfromhell.nodes.Template
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —Å–æ—Å—Ç–æ–∏—Ç –¢–û–õ–¨–ö–û –∏–∑ —ç—Ç–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
            # (—Å —É—á–µ—Ç–æ–º –≤–æ–∑–º–æ–∂–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–≤ –≤–æ–∫—Ä—É–≥ —Å–∞–º–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞).
            if str(wikicode_of_unnamed_param).strip() == str(inner_template_node): # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
                inner_template_name = str(inner_template_node.name).strip()
                if compare_template_names(inner_template_name, "–Ω–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏"):
                    # –£—Å–ª–æ–≤–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã!
                    return topic_value_str, str(inner_template_node) # –í–æ–∑–≤—Ä–∞—â–∞–µ–º topic –∏ —Å—Ç—Ä–æ–∫—É —à–∞–±–ª–æ–Ω–∞ "–Ω–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏"
    except Exception as e:
        print_debug(f"        ‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –Ω–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ –≤ Rq: {e}")
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ return None –≤ –∫–æ–Ω—Ü–µ —Ñ—É–Ω–∫—Ü–∏–∏
        
    return None # –£—Å–ª–æ–≤–∏—è –ø–æ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É —à–∞–±–ª–æ–Ω—É –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã –∏–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞

def process_article(page: pywikibot.Page, site: pywikibot.Site, project_redirects_map: Dict[str, Dict[str, str]]):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–¥–Ω—É —Å—Ç–∞—Ç—å—é.
    project_redirects_map: { '–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ_–∏–º—è_—à–∞–±–ª–æ–Ω–∞_–ø—Ä–æ–µ–∫—Ç–∞': { '–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π_—Ä–µ–¥–∏—Ä–µ–∫—Ç': '–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ_–∏–º—è_—à–∞–±–ª–æ–Ω–∞_–ø—Ä–æ–µ–∫—Ç–∞' } }
    """
    print_debug(f"--- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—å–∏: {page.title()} ---")
    text = page.text
    wikicode = mwparserfromhell.parse(text)
    made_changes_to_article = False
    summary_parts_article = []

    # –ò—â–µ–º —à–∞–±–ª–æ–Ω Rq
    for template in wikicode.filter_templates():
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º compare_template_names –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å "Rq" –∏ –µ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞–º–∏ (–µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å)
        # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –∏—â–µ–º —Ç–æ–ª—å–∫–æ "Rq" —Å —Ä–∞–∑–Ω—ã–º —Ä–µ–≥–∏—Å—Ç—Ä–æ–º.
        if not compare_template_names(str(template.name).strip(), "Rq"):
            continue

        print_debug(f"    üîç –ù–∞–π–¥–µ–Ω —à–∞–±–ª–æ–Ω, –ø–æ—Ö–æ–∂–∏–π –Ω–∞ Rq: {template.name}")
        
        # check_rq_conditions —Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂ (topic_value, net_illyustratsii_template_str)
        rq_check_result = check_rq_conditions(template) 

        if rq_check_result:
            topic_value_from_rq_conditions, net_illyustratsii_template_str = rq_check_result # –†–∞–∑–±–∏—Ä–∞–µ–º –∫–æ—Ä—Ç–µ–∂
            original_topic_display = topic_value_from_rq_conditions # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
            topic_value_lower = original_topic_display.lower()      # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –∫–∞—Ä—Ç–µ
            
            project_template_name_from_map = None # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            for topic_aliases_tuple, template_or_skip_value in COMPACT_TOPIC_TO_PROJECT_TEMPLATE_MAP.items():
                if topic_value_lower in topic_aliases_tuple:
                    project_template_name_from_map = template_or_skip_value
                    break # –ù–∞—à–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ, –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞

            if project_template_name_from_map is None:
                print_debug(f"        ‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π topic='{original_topic_display}'. –≠—Ç–æ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä {{Rq}} –±—É–¥–µ—Ç –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω.")
                continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä Rq, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–±–ª–æ–Ω—É –≤ —Å—Ç–∞—Ç—å–µ
            
            # ---- –ù–û–í–û–ï –ò–ó–ú–ï–ù–ï–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 'skip' –ó–î–ï–°–¨ ----
            if project_template_name_from_map == 'skip':
                print_debug(f"        ‚è≠Ô∏è Topic='{original_topic_display}' ({project_template_name_from_map}) —É–∫–∞–∑–∞–Ω –∫–∞–∫ 'skip'. –≠—Ç–æ—Ç {{Rq}} –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.")
                continue # –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç–æ—Ç {{Rq}}, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–±–ª–æ–Ω—É –≤ —Å—Ç–∞—Ç—å–µ
            # ---- –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ò–ó–ú–ï–ù–ï–ù–ò–Ø ----
            
            # –ï—Å–ª–∏ –º—ã –∑–¥–µ—Å—å, topic –∏–∑–≤–µ—Å—Ç–µ–Ω –∏ –ù–ï 'skip'
            print_debug(f"        ‚úÖ –£—Å–ª–æ–≤–∏—è –¥–ª—è —à–∞–±–ª–æ–Ω–∞ Rq –≤—ã–ø–æ–ª–Ω–µ–Ω—ã. Topic='{original_topic_display}' —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω —Å '{project_template_name_from_map}'")
            
            replacement_template_str = net_illyustratsii_template_str # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π —à–∞–±–ª–æ–Ω "–Ω–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏"
            summary_for_article = "" 
            talk_page_status: str = 'NO_ACTION_TAKEN' # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
            found_template_on_so_name: Optional[str] = None # –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ —à–∞–±–ª–æ–Ω–∞, –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ –Ω–∞ –°–û

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –°–û (—É–∂–µ –∑–Ω–∞–µ–º, —á—Ç–æ project_template_name_from_map != 'skip')
            print_debug(f"        üìã –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–±–∞–≤–∏—Ç—å/–ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ –°–û: {{ {{{project_template_name_from_map}}} }}")
            talk_page = page.toggleTalkPage()
            talk_page_status, found_template_on_so_name = process_talk_page(talk_page, site, project_template_name_from_map, project_redirects_map, page.title(), original_topic_display)

            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—å–µ
            # project_template_name_from_map –∑–¥–µ—Å—å —Ç–æ—á–Ω–æ –Ω–µ 'skip' –∏ –Ω–µ None
            if talk_page_status == 'ALREADY_EXISTED_EQUIVALENT':
                if found_template_on_so_name:
                    summary_for_article = f"–†–∞—Å–∫—Ä—ã—Ç–∏–µ [[—à:Rq]] —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º [[—à:–ù–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏]], topic={original_topic_display} (–æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ [[—à:{found_template_on_so_name}]] –Ω–∞ –°–û)"
                else: # –ù–∞ —Å–ª—É—á–∞–π –µ—Å–ª–∏ found_template_on_so_name –ø–æ—á–µ–º—É-—Ç–æ None, —Ö–æ—Ç—è –Ω–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏ —ç—Ç–æ–º —Å—Ç–∞—Ç—É—Å–µ
                    summary_for_article = f"–†–∞—Å–∫—Ä—ã—Ç–∏–µ [[—à:Rq]] —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º [[—à:–ù–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏]], topic={original_topic_display} (—à–∞–±–ª–æ–Ω —ç—Ç–æ–≥–æ –∏–ª–∏ –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ —É–∂–µ –µ—Å—Ç—å –Ω–∞ –°–û)" 
            else: # ADDED_SUCCESSFULLY –∏–ª–∏ NO_ACTION_TAKEN (–µ—Å–ª–∏ –°–û –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞—Å—å)
                summary_for_article = f"–†–∞—Å–∫—Ä—ã—Ç–∏–µ [[—à:Rq]] —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–º [[—à:–ù–µ—Ç –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏–∏]], topic={original_topic_display} –∑–∞–º–µ–Ω—ë–Ω –Ω–∞ [[—à:{project_template_name_from_map}]] –Ω–∞ –°–û"
            
            try:
                wikicode.replace(template, replacement_template_str)
                made_changes_to_article = True 
                summary_parts_article.append(summary_for_article) 
                print_debug(f"        üîÑ –®–∞–±–ª–æ–Ω Rq (topic: {original_topic_display}) –±—É–¥–µ—Ç –∑–∞–º–µ–Ω–µ–Ω –Ω–∞: {replacement_template_str}")
                
                # –ú—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π {{Rq}} –≤ —Å—Ç–∞—Ç—å–µ –∑–∞ –æ–¥–∏–Ω –≤—ã–∑–æ–≤ process_article
                break 
            except Exception as e:
                print_debug(f"        ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–º–µ–Ω–µ —à–∞–±–ª–æ–Ω–∞ Rq –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—å–µ: {e}")
                wikicode = mwparserfromhell.parse(page.text) 
                made_changes_to_article = False
                summary_parts_article = []
                break
        else:
            print_debug(f"        ‚ùå –£—Å–ª–æ–≤–∏—è –¥–ª—è —à–∞–±–ª–æ–Ω–∞ Rq –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã.")

    if made_changes_to_article:
        new_text = str(wikicode)
        if new_text != page.text:
            summary = ", ".join(summary_parts_article)
            print_debug(f"    üíæ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤ —Å—Ç–∞—Ç—å–µ '{page.title()}'. –û–ø–∏—Å–∞–Ω–∏–µ: {summary}")
            if AUTOSAVE:
                try:
                    page.text = new_text
                    page.save(summary=summary, minor=True)
                    print_debug(f"        ‚úÖ –°—Ç–∞—Ç—å—è '{page.title()}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
                except Exception as e:
                    print_debug(f"        ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏ '{page.title()}': {e}")
            else:
                pywikibot.showDiff(page.text, new_text)
                choice = pywikibot.input_choice(f"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç—å–µ '{page.title()}'?", 
                                              [ ('–î–∞', 'y'), ('–ù–µ—Ç', 'n'), ('–í—ã—Ö–æ–¥', 'q') ], 
                                              default='N')
                if choice == 'y':
                    try:
                        page.text = new_text
                        page.save(summary=summary, minor=True)
                        print_debug(f"        ‚úÖ –°—Ç–∞—Ç—å—è '{page.title()}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
                        return 'ADDED_SUCCESSFULLY'
                    except Exception as e:
                        print_debug(f"        ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—å–∏ '{page.title()}': {e}")
                else:
                    print_debug(f"        üö´ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç—å–µ '{page.title()}' –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
        else:
            print_debug(f"    ‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ —Å—Ç–∞—Ç—å–∏ '{page.title()}' –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
    else:
        print_debug(f"    ‚ÑπÔ∏è –î–ª—è —Å—Ç–∞—Ç—å–∏ '{page.title()}' –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.")


def process_talk_page(talk_page: pywikibot.Page, site: pywikibot.Site, 
                      target_project_template_from_map: str, 
                      all_project_redirects_map: Dict[str, Dict[str, str]],
                      main_article_title: str,
                      topic_value_from_rq: str) -> Tuple[str, Optional[str]]:
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ–±—Å—É–∂–¥–µ–Ω–∏—è: –¥–æ–±–∞–≤–ª—è–µ—Ç —à–∞–±–ª–æ–Ω –ø—Ä–æ–µ–∫—Ç–∞, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏ –∏–º—è –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –Ω–∞ –°–û (–µ—Å–ª–∏ –µ—Å—Ç—å):
    ('ALREADY_EXISTED_EQUIVALENT', '–ò–º—è–ù–∞–π–¥–µ–Ω–Ω–æ–≥–æ–®–∞–±–ª–æ–Ω–∞'), 
    ('ADDED_SUCCESSFULLY', None), 
    ('NO_ACTION_TAKEN', None).
    all_project_redirects_map: { '–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ_–∏–º—è_—à–∞–±–ª–æ–Ω–∞_–ø—Ä–æ–µ–∫—Ç–∞_–∏–ª–∏_—ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–∞': { '–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π_—Ä–µ–¥–∏—Ä–µ–∫—Ç': '–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ_–∏–º—è_—ç—Ç–æ–≥–æ_—à–∞–±–ª–æ–Ω–∞' } }
    target_project_template_from_map: –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è —à–∞–±–ª–æ–Ω–∞, –∫–æ—Ç–æ—Ä–æ–µ –º—ã –±—ã –ø–æ—Å—Ç–∞–≤–∏–ª–∏ —Å–æ–≥–ª–∞—Å–Ω–æ COMPACT_TOPIC_TO_PROJECT_TEMPLATE_MAP.
    topic_value_from_rq: –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ topic –∏–∑ —à–∞–±–ª–æ–Ω–∞ Rq –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—å–µ.
    """
    print_debug(f"    üí¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ –°–û: {talk_page.title()}")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –Ω–∞—à —Ü–µ–ª–µ–≤–æ–π —à–∞–±–ª–æ–Ω (target_project_template_from_map) –∏–ª–∏ –µ–≥–æ —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã
    redirects_for_target = all_project_redirects_map.get(target_project_template_from_map, {})
    if not redirects_for_target:
        print_debug(f"        ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –¥–ª—è —Ü–µ–ª–µ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ '{target_project_template_from_map}'. –≠—Ç–æ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ.")
        return 'NO_ACTION_TAKEN', None

    talk_page_exists = talk_page.exists()
    current_talk_text = talk_page.text if talk_page_exists else ""
    
    if talk_page_exists:
        talk_wikicode = mwparserfromhell.parse(current_talk_text)
        for tpl_on_talk_page in talk_wikicode.filter_templates():
            tpl_on_talk_page_name_original = str(tpl_on_talk_page.name).strip() # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è
            tpl_on_talk_page_name_norm = normalize_template_name_for_comparison(tpl_on_talk_page_name_original)
            if tpl_on_talk_page_name_norm in redirects_for_target: # –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞–º–∏ –Ω–∞—à–µ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
                print_debug(f"        ‚úÖ –¶–µ–ª–µ–≤–æ–π —à–∞–±–ª–æ–Ω '{target_project_template_from_map}' (—á–µ—Ä–µ–∑ '{tpl_on_talk_page_name_original}') —É–∂–µ –µ—Å—Ç—å –Ω–∞ –°–û.")
                return 'ALREADY_EXISTED_EQUIVALENT', tpl_on_talk_page_name_original

        # 2. –ï—Å–ª–∏ —Ü–µ–ª–µ–≤–æ–≥–æ –Ω–µ—Ç, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–æ–≤
        for equivalent_on_so, maps_to_our_target in PROJECT_EQUIVALENTS_ON_TALK_PAGE.items():
            if maps_to_our_target == target_project_template_from_map:
                # –≠—Ç–æ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç –Ω–∞—à–µ–≥–æ —Ü–µ–ª–µ–≤–æ–≥–æ —à–∞–±–ª–æ–Ω–∞. –¢–µ–ø–µ—Ä—å –∏—â–µ–º –ï–ì–û (equivalent_on_so) —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –Ω–∞ –°–û.
                redirects_for_equivalent = all_project_redirects_map.get(equivalent_on_so, {})
                if not redirects_for_equivalent:
                    print_debug(f"        ‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω—ã —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –¥–ª—è —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ '{equivalent_on_so}'. –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —ç—Ç—É –ø—Ä–æ–≤–µ—Ä–∫—É —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–∞.")
                    continue
                
                # talk_wikicode —É–∂–µ –µ—Å—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
                for tpl_on_talk_page in talk_wikicode.filter_templates(): # –ü–æ–≤—Ç–æ—Ä–Ω—ã–π –ø—Ä–æ—Ö–æ–¥, –Ω–æ —Ç–µ–ø–µ—Ä—å –∏—â–µ–º equivalent_on_so
                    tpl_on_talk_page_name_original_for_equiv = str(tpl_on_talk_page.name).strip() # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –∏–º—è
                    tpl_on_talk_page_name_norm_for_equiv = normalize_template_name_for_comparison(tpl_on_talk_page_name_original_for_equiv)
                    if tpl_on_talk_page_name_norm_for_equiv in redirects_for_equivalent:
                        print_debug(f"        ‚úÖ –≠–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã–π —à–∞–±–ª–æ–Ω '{equivalent_on_so}' (—á–µ—Ä–µ–∑ '{tpl_on_talk_page_name_original_for_equiv}') —É–∂–µ –µ—Å—Ç—å –Ω–∞ –°–û, —Å—á–∏—Ç–∞–µ—Ç—Å—è –∑–∞ '{target_project_template_from_map}'.")
                        return 'ALREADY_EXISTED_EQUIVALENT', tpl_on_talk_page_name_original_for_equiv
    
    # –ï—Å–ª–∏ –º—ã –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç –Ω–∏ —Ü–µ–ª–µ–≤–æ–≥–æ, –Ω–∏ –µ–≥–æ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–æ–≤ –Ω–∞ –°–û –Ω–µ—Ç.
    # –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞—à —Ü–µ–ª–µ–≤–æ–π —à–∞–±–ª–æ–Ω (target_project_template_from_map)
    if not talk_page_exists:
        print_debug("        ‚ÑπÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞.")
        # current_talk_text —É–∂–µ ""

    new_template_text = f"{{{{{target_project_template_from_map}}}}}"
    
    # –ò—â–µ–º –¥—Ä—É–≥–∏–µ —à–∞–±–ª–æ–Ω—ã "–°—Ç–∞—Ç—å—è –ø—Ä–æ–µ–∫—Ç–∞"
    talk_wikicode_for_insertion = mwparserfromhell.parse(current_talk_text) # –ü–µ—Ä–µ–ø–∞—Ä—Å–∏–º –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã
    
    last_project_banner_pos = -1
    
    # –ò—â–µ–º –ø–æ–∑–∏—Ü–∏—é –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —à–∞–±–ª–æ–Ω–∞ –ø—Ä–æ–µ–∫—Ç–∞
    # –ú—ã –Ω–µ –º–æ–∂–µ–º –Ω–∞–ø—Ä—è–º—É—é –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å filter_templates().index() –∏–ª–∏ –ø–æ–¥–æ–±–Ω—ã–µ –º–µ—Ç–æ–¥—ã,
    # —Ç–∞–∫ –∫–∞–∫ –Ω–∞–º –Ω—É–∂–Ω–∞ –ø–æ–∑–∏—Ü–∏—è –≤ *—Å—Ç—Ä–æ–∫–æ–≤–æ–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–∏* –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –≤—Å—Ç–∞–≤–∫–∏.
    # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ, –Ω–∞–π–¥–µ–º –≤—Å–µ —à–∞–±–ª–æ–Ω—ã –∏ –∏—Ö —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è.
    
    existing_project_banners = []
    for node in talk_wikicode_for_insertion.nodes:
        if isinstance(node, mwparserfromhell.nodes.Template):
            if str(node.name).strip().startswith(PROJECT_TEMPLATE_PREFIX):
                existing_project_banners.append(str(node))

    if existing_project_banners:
        last_banner_str = existing_project_banners[-1]
        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ —Ç–µ–∫—Å—Ç–µ
        # –≠—Ç–æ –Ω–µ –∏–¥–µ–∞–ª—å–Ω–æ, –µ—Å–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –±–∞–Ω–Ω–µ—Ä—ã –ø–æ–≤—Ç–æ—Ä—è—é—Ç—Å—è, –Ω–æ –¥–ª—è –°–û –æ–±—ã—á–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã –∏–ª–∏ –∏–¥—É—Ç –ø–æ–¥—Ä—è–¥
        pos = current_talk_text.rfind(last_banner_str)
        if pos != -1:
            last_project_banner_pos = pos + len(last_banner_str)
            # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞, —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
            # –ï—Å–ª–∏ current_talk_text[last_project_banner_pos] —É–∂–µ \n, —Ç–æ –±—É–¥–µ—Ç –¥–≤–∞ \n. –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ.
            # –ï—Å–ª–∏ –Ω–µ—Ç, —Ç–æ –¥–æ–±–∞–≤–∏—Ç—Å—è \n.
            new_talk_text = (current_talk_text[:last_project_banner_pos] +
                             "\n" + new_template_text +
                             current_talk_text[last_project_banner_pos:])
            print_debug(f"        ‚ûï –î–æ–±–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω '{target_project_template_from_map}' –ø–æ—Å–ª–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –±–∞–Ω–Ω–µ—Ä–æ–≤.")
        else: # –ù–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ —Å—Ç—Ä–æ–∫—É –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±–∞–Ω–Ω–µ—Ä–∞ - —Å—Ç—Ä–∞–Ω–Ω–æ, –Ω–æ –¥–æ–±–∞–≤–∏–º –≤ –Ω–∞—á–∞–ª–æ
            new_talk_text = new_template_text + "\n" + current_talk_text
            print_debug(f"        ‚ûï –î–æ–±–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω '{target_project_template_from_map}' –≤ –Ω–∞—á–∞–ª–æ –°–û (–Ω–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–∑–∏—Ü–∏—é –ø–æ—Å–ª–µ –±–∞–Ω–Ω–µ—Ä–æ–≤).")
    else:
        # –ù–µ—Ç –¥—Ä—É–≥–∏—Ö —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
        new_talk_text = new_template_text + "\n" + current_talk_text
        print_debug(f"        ‚ûï –î–æ–±–∞–≤–ª—è–µ–º —à–∞–±–ª–æ–Ω '{target_project_template_from_map}' –≤ –Ω–∞—á–∞–ª–æ –°–û.")

    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã/–ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –≤ –Ω–∞—á–∞–ª–µ/–∫–æ–Ω—Ü–µ, –µ—Å–ª–∏ –æ–Ω–∏ –ø–æ—è–≤–∏–ª–∏—Å—å
    new_talk_text = new_talk_text.strip()

    if new_talk_text != current_talk_text.strip():
        # summary_talk = f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ [[—à:{target_project_template_from_map}]] –ø–æ –∏—Ç–æ–≥–∞–º —Ä–∞—Å–∫—Ä—ã—Ç–∏—è {{Rq|topic={topic_value_from_rq}}} –≤ [[{main_article_title}|–æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—å–µ]]"
        summary_talk = f"–£—Å—Ç–∞–Ω–æ–≤–∫–∞ [[—à:{target_project_template_from_map}]] –ø–æ –∏—Ç–æ–≥–∞–º —Ä–∞—Å–∫—Ä—ã—Ç–∏—è {{{{Rq|topic={topic_value_from_rq}}}}} –≤ [[{main_article_title}|–æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–∞—Ç—å–µ]]"
        print_debug(f"    üíæ –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –Ω–∞ –°–û '{talk_page.title()}'. –û–ø–∏—Å–∞–Ω–∏–µ: {summary_talk}")
        if AUTOSAVE:
            try:
                talk_page.text = new_talk_text
                talk_page.save(summary=summary_talk, minor=True)
                print_debug(f"        ‚úÖ –°–û '{talk_page.title()}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
                return 'ADDED_SUCCESSFULLY', None
            except Exception as e:
                print_debug(f"        ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –°–û '{talk_page.title()}': {e}")
        else:
            pywikibot.showDiff(current_talk_text, new_talk_text)
            choice = pywikibot.input_choice(f"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –°–û '{talk_page.title()}'?", 
                                          [ ('–î–∞', 'y'), ('–ù–µ—Ç', 'n'), ('–í—ã—Ö–æ–¥', 'q') ], 
                                          default='N')
            if choice == 'y':
                try:
                    talk_page.text = new_talk_text
                    talk_page.save(summary=summary_talk, minor=True)
                    print_debug(f"        ‚úÖ –°–û '{talk_page.title()}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.")
                    return 'ADDED_SUCCESSFULLY', None
                except Exception as e:
                    print_debug(f"        ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –°–û '{talk_page.title()}': {e}")
            else:
                print_debug(f"        üö´ –ò–∑–º–µ–Ω–µ–Ω–∏—è –Ω–∞ –°–û '{talk_page.title()}' –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")
    else:
        print_debug(f"    ‚ÑπÔ∏è –ò–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–µ–∫—Å—Ç–µ –°–û '{talk_page.title()}' –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è.")
    return 'NO_ACTION_TAKEN', None


# --- MAIN FUNCTION ---
def main():
    site = get_site()
    print_debug(f"‚úÖ –í—Ö–æ–¥ –Ω–∞ {site.sitename} –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ.")

    # –ü–æ–ª—É—á–∞–µ–º/–∫—ç—à–∏—Ä—É–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤
    # all_project_redirects_map: { '–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ_–∏–º—è_—à–∞–±–ª–æ–Ω–∞_–ø—Ä–æ–µ–∫—Ç–∞': { '–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π_—Ä–µ–¥–∏—Ä–µ–∫—Ç': '–æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ_–∏–º—è_—à–∞–±–ª–æ–Ω–∞_–ø—Ä–æ–µ–∫—Ç–∞' } }
    all_project_redirects_map = get_all_project_template_redirects(site)
    if not all_project_redirects_map:
        print_debug("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç—ã –¥–ª—è —à–∞–±–ª–æ–Ω–æ–≤ –ø—Ä–æ–µ–∫—Ç–æ–≤. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
        return

    if DEBUG_ARTICLE:
        page = pywikibot.Page(site, DEBUG_ARTICLE)
        if page.exists():
            process_article(page, site, all_project_redirects_map)
        else:
            print_debug(f"‚ùå –û—Ç–ª–∞–¥–æ—á–Ω–∞—è —Å—Ç–∞—Ç—å—è '{DEBUG_ARTICLE}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        return

    category = pywikibot.Category(site, TARGET_CATEGORY)
    articles = list(category.articles()) # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π –æ–¥–∏–Ω —Ä–∞–∑
    
    print_debug(f"\nüìö –ù–∞–π–¥–µ–Ω–æ {len(articles)} —Å—Ç–∞—Ç–µ–π –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{TARGET_CATEGORY}'.")
    if not articles:
        print_debug("–ù–µ—Ç —Å—Ç–∞—Ç–µ–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.")
        return

    for i, page in enumerate(articles):
        print_debug(f"\n--- –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç–∞—Ç—å–∏ {i+1}/{len(articles)}: [[{page.title()}]] ---")
        try:
            process_article(page, site, all_project_redirects_map)
        except pwb_exceptions.QuitKeyboardInterrupt:
            print_debug("\nüõë –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (–Ω–∞–∂–∞—Ç–∞ 'q').")
            break # –í—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞ for, —á—Ç–æ –ø—Ä–∏–≤–µ–¥–µ—Ç –∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é main()
        except Exception as e:
            print_debug(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç–∞—Ç—å–∏ [[{page.title()}]]: {e}")
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫ –∏–ª–∏ –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏
        # –î–æ–±–∞–≤–∏–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–≥—Ä—É–∂–∞—Ç—å —Å–µ—Ä–≤–µ—Ä —Å–ª–∏—à–∫–æ–º —Å–∏–ª—å–Ω–æ
        time.sleep(1) 

    print_debug("\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")

if __name__ == "__main__":
    main()
